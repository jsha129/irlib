% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filterSamplesByGroups.R
\name{filterSamplesByGroups}
\alias{filterSamplesByGroups}
\title{Applies flexible IR selection criteria to each sample in each
 biological condition.}
\usage{
filterSamplesByGroups(
  all,
  criteria,
  groups,
  intraGroupMergeLogic = "and",
  minPassingGroups = 1
)
}
\arguments{
\item{criteria}{Text of of the criteria to be applied on each sample in
SampleList, termed '\emph{x}' in the criteria. \emph{criteria} is directly evaluated by R; therefore, it must be a valid
expression and \strong{must} contain a dummy variable \emph{x} that is used a placeholder for iteration. In addition, criteria must contain \emph{all} as matrix name.}

\item{groups}{a list with each element representing biological groups (as name of the element) and samples belonging to that group.}

\item{intraGroupMergeLogic}{Specifies how to merge all samples belonging to one group should be collapsed into 1D vector: by \emph{and} or \emph{or}
operator.}

\item{minPassingGroups}{Minimum number of biological conditions/groups satisfying the criteria.}

\item{data}{something similar to the mighty \emph{all} variable containing
list of IRFinder columns.}
}
\value{
1D or 2D logical vector representing samples passing the filtering
 criteria.
}
\description{
\link{filterSamples()} that applies selection criteria to each
 sample regardless of their biological
 conditions/grouping.\link{filterSamplesByGroups()} splits samples by their
 biological conditions, applies \link{filterSamples()} on each group and
 combines output into a 1D vector. For example, this function is helpful when one wants to filter IR that has splice exact greater than 100 in all samples in at least one group. \emph{criteria} is directly evaluated by R; therefore, it must be a valid
 expression. \emph{criteria} \strong{must} contain a dummy variable \emph{x}
 that is used a placeholder for iteration.
}
\examples{
\dontrun{
expDesign <- data.frame(Sample = c(paste("Cancer", 1:3, sep ="_"), paste("Normal", 1:3, sep = "_") ) ,
Condition = rep(c("Cancer", "Normal"), each = 3))
expDesign$Condition <- factor(expDesign$Condition, levels = c("Normal", "Cancer"))
groups <- split(expDesign$Sample, expDesign$Condition)
groups
criteria <- "all[[\"IR\"]][, x] > 0.1" # [,x] will be replaced by each sample
##  minPassingGroups = 1. All samples in at least one group should satisfy the filtering criteria.
filtered_ir <- filterSamplesByGroups(all, criteria = criteria, groups = groups, minPassingGroups = 1)
table(filtered_ir)
}
}
